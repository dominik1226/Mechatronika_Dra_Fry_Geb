#define trigPin 12
#define echoPin 11

#include "Servo.h"
#define servo 9
Servo myservo;

#include <LiquidCrystal.h>
LiquidCrystal lcd(2, 3, 4, 5, 6, 7);

int odleglosc = 0;
int blad;

int kp = 5;
int odleglosc_ustawiona = 20;
int pid_p;

unsigned long czas = 0;
static unsigned long czas_servo = 0;

void setup() {
  Serial.begin (9600);
  pinMode(trigPin, OUTPUT); //wejscie wyzwalające
  pinMode(echoPin, INPUT); //z wyjścia echo odczytujemy zmierzona odleglosc
  lcd.begin(16, 2); //Deklaracja typu
  lcd.clear();
  myservo.attach(servo);
  myservo.write(90);
}

void loop() {
  czas = millis();
  servo_p();
  pokaz_na_lcd();
}

int zmierz() {
  long czas, dystans;

  digitalWrite(trigPin, LOW);
  delayMicroseconds(2);
  digitalWrite(trigPin, HIGH);
  delayMicroseconds(12);
  digitalWrite(trigPin, LOW);

  czas = pulseIn(echoPin, HIGH); //czas zmierzonego sygalu, dlugosc sygnalu jest proporcjonalna do odleglosci
  dystans = czas / 58; // 58 Wynika z czasu przez jaki dźwięk pokonuje odległość 1 cm oraz wzoru na odległość jaką przedstawił producent

  return dystans;
}

void pokaz_na_lcd() {
  lcd.setCursor(0, 1);
  lcd.print("Dystans:");
  lcd.setCursor(9, 1);
  lcd.print(zmierz());
  lcd.setCursor(13, 1);
  lcd.print("cm");
  delay(100);
  lcd.clear();
}

void servo_p() {
  if (czas - czas_servo >= 100) {
    odleglosc = zmierz();
    blad = odleglosc_ustawiona - odleglosc;
    pid_p = kp * blad;

    if (odleglosc >= 2 && odleglosc <= 38) {
      myservo.write(90 + pid_p);
    }

  }
}
