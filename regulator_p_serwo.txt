#define trigPin 12
#define echoPin 11

#include "Servo.h"
#define servo 9 
Servo myservo;

#include <LiquidCrystal.h>
LiquidCrystal lcd(2, 3, 4, 5, 6, 7);

long odleglosc=0;
long blad;

long kp=5;
long odleglosc_ustawiona= 20;
long pid_p;

void setup() {
  Serial.begin (9600);
  pinMode(trigPin, OUTPUT); //wejscie wyzwalające
  pinMode(echoPin, INPUT); //z wyjścia echo odczytujemy zmierzona odleglosc
  lcd.begin(16, 2); //Deklaracja typu
  lcd.clear();
  myservo.attach(servo);
  myservo.write(90);
}
 
void loop() {
  //Serial.print(zmierz());
  //Serial.println(" cm");
  
  odleglosc = zmierz();
  blad = odleglosc_ustawiona - odleglosc;
  pid_p = kp * blad;
  
  
  if (pid_p > 90){
    myservo.write(180);
  } else if (pid_p < -90 ){
    myservo.write(0);
  } else {
    myservo.write(90+pid_p);
  }
  
  pokaz_na_lcd();
}

int zmierz(){
  long czas, dystans;
  
  digitalWrite(trigPin, LOW);
  delayMicroseconds(2);
  digitalWrite(trigPin, HIGH);
  delayMicroseconds(12);
  digitalWrite(trigPin, LOW);
  
  czas = pulseIn(echoPin, HIGH); //czas zmierzonego sygalu, dlugosc sygnalu jest proporcjonalna do odleglosci
  dystans = czas / 58; // 58 Wynika z czasu przez jaki dźwięk pokonuje odległość 1 cm oraz wzoru na odległość jaką przedstawił producent

   return dystans;
}

int pokaz_na_lcd(){
  lcd.setCursor(0,1);
  lcd.print("Dystans:");
  lcd.setCursor(9,1);
  lcd.print(zmierz());
  lcd.setCursor(13,1);
  lcd.print("cm");
  delay(100);
  lcd.clear(); 
}
